{"version":3,"sources":["Component/Navigation/Logo.js","Component/Navigation/Navlist.js","Component/Navigation/Navmenu.js","Component/Navigation/ProfileInfo.js","Component/Navigation/TopNav.js","Component/Navigation/Sidebar.js","Component/Dashboard/Metrics/CycleTime.js","Component/Dashboard/Metrics/Wip.js","Component/Dashboard/Metrics/FlowEfficiency.js","Component/Dashboard/Metrics/ProcessMetrics.js","Component/Dashboard/Metrics/Metrics.js","Component/Dashboard/Charts/Cfd.js","Component/Dashboard/Charts/Cts.js","Component/Dashboard/Charts/Cth.js","Component/Dashboard/Charts/Charts.js","Component/Dashboard/Dashboard.js","Component/Board/Kanban/Work.js","Component/Board/Kanban/Cycle.js","Component/GanntChart/WorkModalForm.js","Component/Board/Kanban/Projectinfo.js","Client/ClientCrud.js","Client/UserRest.js","Component/Board/Kanban/Kanban.js","Component/Board/Board.js","Component/GanntChart/Gannt.js","Component/GanntChart/Progressbar.js","Component/GanntChart/WorksList.js","Component/GanntChart/Epic.js","Component/GanntChart/EpicModalForm.js","Component/GanntChart/EpicNewWork.js","Client/EpicRest.js","Component/GanntChart/GanntChart.js","Client/AuthUtil.js","Login.js","Component/Navigation/MainNav.js","Component/backlogs/Sprint.js","Component/backlogs/BackLogs.js","App.js","serviceWorker.js","index.js"],"names":["Logo","className","Component","Navlist","props","toggleList","wrapper","current","classList","toggle","React","createRef","name","child","childlist","dropicon","link","to","onClick","toggleSidebar","icon","aria-hidden","style","cursor","map","key","id","this","ref","Navmenu","NavList","nav","ProfileInfo","src","alt","TopNav","Sidebar","CycleTime","cycletime","workpercentage","Wip","workitem","FlowEfficiency","percentage","ProcessMetrics","arrival","throughput","dailywip","Metrics","Cfd","option","tooltip","trigger","axisPointer","type","label","backgroundColor","borderWidth","borderColor","padding","textStyle","color","extraCssText","grid","right","left","bottom","top","containLabel","xAxis","splitLine","show","axisLine","interval","axisLabel","formatter","value","moment","format","yAxis","nameTextStyle","fontSize","series","lineStyle","width","areaStyle","stack","symbolSize","data","Cts","options","axisTick","Cth","markLine","position","symbol","Charts","Dashboard","Work","togglemodal","togglemodalworkform","work","priority","state","prevProps","prevState","snapshot","setState","draggableId","index","provided","innerRef","draggableProps","dragHandleProps","tags","tag","peoples","comments","Cycle","creatework","description","cycleId","cycle","droppableId","droppableProps","workList","placeholder","WorkModalForm","removeworkfrommodal","removework","deleteworkfrommodal","deletework","formchanges","event","Object","assign","target","tagenter","keyCode","push","pop","savechanges","modifywork","htmlFor","onChange","onKeyDown","rows","cols","title","removeshow","Projectinfo","ClientCrud","objects","fetch","Resthost","method","headers","body","JSON","stringify","then","req","json","UserRest","res","Kanban","wrap","workmodalwrapper","currentwork","update","u","getBoard","onDragEnd","result","destination","parseInt","splice","source","drag","delete","borders","Board","Gannt","tooltipformat","param","length","s","daytodate","year","dayOfYear","daytodateyear","epics","dataZoom","filterMode","showDataShadow","height","handleIcon","handleSize","handleStyle","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","labelFormatter","scale","epic","itemStyle","barBorderColor","emphasis","startingDate","showBackground","backgroundStyle","clip","barMaxWidth","a","itemstyle","barBorderRadius","progress","endingDate","Progressbar","bgcolor","background","WorksList","togglemodalepicform","Epic","addwork","toggleaddnewworkform","EpicModalForm","Date","modifyepic","deleteepic","EpicNewWork","epicId","projectId","works","notassignwork","wrapperref","EpicRest","GanntChart","currentepic","old","i","getTimeline","addepic","removeworkstate","j","epicmodalwrapper","addepicwork","getWorklistwithnoepic","AuthUtil","username","password","config","url","axios","Login","email","getToken","updateauth","MainNav","toggleprojects","projects","href","Sprint","colapseref","BackLogs","App","auth","loginauthentication","path","exact","component","checkToken","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1757b49e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Logo extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"h-20 font-serif lg:block font-bold\">\r\n                <h1 className=\"text-center text-gray-200 text-3xl p-5 hover:text-white\">\r\n                    BOARD\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logo;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navlist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapper = React.createRef()\r\n        this.name = this.props.name;\r\n        if (props.child == null) {\r\n            this.childlist = null;\r\n            this.dropicon = null;\r\n            this.link =\r\n                <Link to={this.props.link} onClick={this.props.toggleSidebar}>\r\n                    <div className=\"p-3 h-12 navs z-20\">\r\n                        <h3 className=\"float-left pl-3\"><i className={this.props.icon + \" px-2\"}\r\n                                                           aria-hidden=\"true\"></i>{this.name}</h3>\r\n                        <span className=\"float-right\">{this.dropicon}</span>\r\n                    </div>\r\n                </Link>;\r\n        } else {\r\n            this.dropicon = <i className=\"fa fa-chevron-down\" style={{cursor: 'pointer'}}></i>;\r\n            this.childlist = this.props.child.map(child => {\r\n                return <Link to={child.link} key={child.id} onClick={this.props.toggleSidebar}>\r\n                    <li className=\"h-10\">\r\n                        <p className=\"pl-8 p-2\">{child.name}</p>\r\n                    </li>\r\n                </Link>\r\n            });\r\n            this.link =\r\n                <div className=\"p-3 h-12 navs z-20\" onClick={this.toggleList}>\r\n                    <h3 className=\"float-left pl-3\"><i className={this.props.icon + \" px-2\"}\r\n                                                       aria-hidden=\"true\"></i>{this.name}</h3>\r\n                    <span className=\"float-right\">{this.dropicon}</span>\r\n                </div>;\r\n\r\n        }\r\n    }\r\n\r\n    toggleList = () => {\r\n        const wrap = this.wrapper.current;\r\n        wrap.classList.toggle('collapsed');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-gray-200 \">\r\n                {this.link}\r\n                <div className=\"collapsible-wrapper collapsed\" ref={this.wrapper}>\r\n                    <ul className=\"navlist collapsible w-full\">\r\n                        {this.childlist}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navlist;\r\n","import React, {Component} from 'react';\r\nimport Navlist from \"./Navlist\";\r\n\r\nclass Navmenu extends Component {\r\n    NavList = [\r\n        {\r\n            id: 0,\r\n            name: \"Home\",\r\n            link: \"/project/\",\r\n            icon: \"fas fa-home\",\r\n            child: null\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Kanban Board\",\r\n            link: \"/project/board\",\r\n            icon: \"far fa-calendar-check\",\r\n            child: null\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Roadmap\",\r\n            link: \"/project/gannt\",\r\n            icon: \"fas fa-chart-bar\",\r\n            child: null\r\n        },\r\n        {\r\n            id: 3,\r\n            link: \"/project/backlogs\",\r\n            name: \"Backlogs\",\r\n            icon: \"fas fa-history\",\r\n            child: null\r\n        },\r\n        {\r\n            id: 4,\r\n            link: \"/project/setting\",\r\n            name: \"Setting\",\r\n            icon: \"fas fa-cog\",\r\n            child: null\r\n        },\r\n\r\n        {\r\n            id: 5,\r\n            name: \"Menu\",\r\n            child: [\r\n                {\r\n                    id: 0,\r\n                    name: \"Menu 1\",\r\n                    link: \"/menu1\"\r\n                },\r\n                {\r\n                    id: 1,\r\n                    name: \"Menu 2\",\r\n                    link: \"/menu2\"\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.NavList.map(nav => {\r\n                    return (\r\n                        <div key={nav.id}>\r\n                            <Navlist name={nav.name} child={nav.child} link={nav.link}\r\n                                     toggleSidebar={this.props.toggleSidebar}\r\n                                     icon={nav.icon}\r\n                            />\r\n                        </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navmenu;\r\n","import React, {Component} from 'react';\r\n\r\nclass ProfileInfo extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"absolute bottom-0\">\r\n                <div className=\"flex items-center p-5 text-gray-300 font-normal hover:text-gray-100\">\r\n                    <img className=\"w-10 h-10 rounded-full mr-4 shadow-xs\" src=\"/tushar.webp\" alt=\"\"/>\r\n                    <div className=\"text-base\">\r\n                        <p className=\"leading-none\">Tushar Chaudhari</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React, {Component} from 'react';\r\n\r\nclass TopNav extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"bgsidebar h-20 border-b border-gray-400 shadow fixed w-full lg:hidden z-20\">\r\n                <div className=\"flex-row\">\r\n                    <div className=\"font-semibold font-serif\">\r\n                        <h1 className=\"text-center text-gray-200 text-3xl p-5 hover:text-white float-left\">\r\n                            BOARD\r\n                        </h1>\r\n                        <span className=\"text-gray-200 text-3xl p-5 float-right burger-toggle\"\r\n                              onClick={this.props.toggleSidebar}>\r\n                                <i className=\"fa fa-bars\" aria-hidden=\"true\"/>\r\n                            </span>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNav;\r\n","import React, {Component} from 'react';\r\nimport Logo from \"./Logo\";\r\nimport Navmenu from \"./Navmenu\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport TopNav from \"./TopNav\";\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapper = React.createRef();\r\n    }\r\n\r\n    toggleSidebar = () => {\r\n        const wrap = this.wrapper.current;\r\n        wrap.classList.toggle('hidesidebar');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TopNav toggleSidebar={this.toggleSidebar}/>\r\n                <div ref={this.wrapper} className=\"lg:block sidebar hidesidebar h-full\">\r\n                    <div className=\"h-full lg:w-56 font-sans font-medium fixed z-10 w-full navlist\">\r\n                        <Logo/>\r\n                        <div className=\"h-auto mt-10 text-base\">\r\n                            <Navmenu toggleSidebar={this.toggleSidebar}/>\r\n                        </div>\r\n                        <ProfileInfo/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {Component} from 'react';\r\n\r\nclass CycleTime extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cycletime = this.props.cycletime;\r\n        this.workpercentage = this.props.workpercentage;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"h-auto lg:w-1/4 md:w-1/2 w-full my-1\">\r\n                <div\r\n                    className=\"bg-white border border-gray-500 rounded m-2 h-full justify-center content-center flex-wrap flex\"\r\n                >\r\n                    <div className=\"text-center w-full p-2\">\r\n                        <p className=\"font-sans text-gray-700 font-medium text-base\">\r\n                            Cycle Time\r\n                        </p>\r\n\r\n                        <p\r\n                            className=\"primarycolor text-2xl font-sans font-semibold w-full\"\r\n                        >\r\n                            {this.cycletime}\r\n                        </p>\r\n                        <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                            were needed to complete\r\n                        </p>\r\n                        <p\r\n                            className=\"primarycolor text-2xl font-sans font-semibold w-full\"\r\n                        >\r\n                            {this.workpercentage}%\r\n                        </p>\r\n                        <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                            work items\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CycleTime;\r\n","import React, {Component} from 'react';\r\n\r\nclass Wip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.workitem = this.props.workitem;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"h-auto lg:w-1/4 md:w-1/2 w-full my-1\">\r\n                <div\r\n                    className=\"bg-white border-gray-500 border rounded m-2 h-full justify-center flex flex-wrap content-center\"\r\n                >\r\n                    <div className=\"text-center w-full p-2\">\r\n                        <p className=\"font-sans text-gray-700 font-medium text-base\">\r\n                            Work In Progress\r\n                        </p>\r\n                        <p\r\n                            className=\"primarycolor text-2xl font-sans font-semibold w-full\"\r\n                        >\r\n                            {this.workitem} work items\r\n                        </p>\r\n                        <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                            are currently in progress\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wip;\r\n","import React, {Component} from 'react';\r\n\r\nclass FlowEfficiency extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.percentage = this.props.percentage;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"h-auto lg:w-1/4 md:w-1/2 w-full my-1\">\r\n                <div\r\n                    className=\"bg-white border border-gray-500 rounded m-2 h-full justify-center flex content-center flex-wrap\"\r\n                >\r\n                    <div className=\"text-center w-full p-2\">\r\n                        <p className=\"font-sans text-gray-700 font-medium text-base\">\r\n                            Flow Efficiency\r\n                        </p>\r\n\r\n                        <p\r\n                            className=\"primarycolor text-2xl font-sans font-semibold w-full\"\r\n                        >\r\n                            {this.percentage}%\r\n                        </p>\r\n                        <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                            Average Flow Efficiency\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FlowEfficiency;\r\n","import React, {Component} from 'react';\r\n\r\nclass ProcessMetrics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.arrival = this.props.arrival;\r\n        this.throughput = this.props.throughput;\r\n        this.dailywip = this.props.dailywip;\r\n        this.cycletime = this.props.cycletime;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"h-auto lg:w-1/4 md:w-1/2 w-full my-1\">\r\n                <div\r\n                    className=\"bg-white border border-gray-500 rounded m-2 h-full content-center flex justify-center flex-wrap\">\r\n                    <div className=\"text-center w-full p-2\">\r\n                        <p className=\"font-sans text-gray-700 font-medium text-base\">\r\n                            Process Metrics\r\n                        </p>\r\n                        <div className=\"flex flex-wrap justify-center\">\r\n                            <div className=\"lg:w-1/2 lg:inline\">\r\n                                <p className=\"primarycolor text-xl font-sans font-semibold w-full\">\r\n                                    {this.arrival}\r\n                                </p>\r\n                                <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                    Arrival Rate items/day\r\n                                </p>\r\n                                <p className=\"primarycolor text-xl font-sans font-semibold w-full\">\r\n                                    {this.dailywip}\r\n                                </p>\r\n                                <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                    Daily WIP items\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"lg:w-1/2 lg:inline\">\r\n                                <p className=\"primarycolor text-xl font-sans font-semibold w-full\">\r\n                                    {this.throughput}\r\n                                </p>\r\n                                <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                    Throughput items/day\r\n                                </p>\r\n                                <p className=\"primarycolor text-xl font-sans font-semibold w-full\">\r\n                                    {this.cycletime}\r\n                                </p>\r\n                                <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                    Cycle Time\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProcessMetrics;\r\n","import React, {Component} from 'react';\r\nimport CycleTime from \"./CycleTime\";\r\nimport Wip from \"./Wip\";\r\nimport FlowEfficiency from \"./FlowEfficiency\";\r\nimport ProcessMetrics from \"./ProcessMetrics\";\r\n\r\nclass Metrics extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"flex flex-wrap w-full my-1\">\r\n                    <CycleTime cycletime={\"22d 4h or less\"} workpercentage={85}/>\r\n                    <Wip workitem={6}/>\r\n                    <FlowEfficiency percentage={68}/>\r\n                    <ProcessMetrics arrival={1.80} dailywip={12.26} throughput={1.11} cycletime={\"11d 14h\"}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Metrics;\r\n","import React, {Component} from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport moment from \"moment\";\r\n\r\nclass Cfd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.option = {\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: \"#5a6f8c\",\r\n                    },\r\n                },\r\n                backgroundColor: 'rgba(245, 245, 245, 0.8)',\r\n                borderWidth: 1,\r\n                borderColor: '#ccc',\r\n                padding: 10,\r\n                textStyle: {\r\n                    color: '#000'\r\n                },\r\n                extraCssText: 'width: 170px'\r\n            },\r\n            grid: {\r\n                right: \"7%\",\r\n                left: \"0%\",\r\n                bottom: \"1%\",\r\n                top: \"7%\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: {\r\n                type: \"time\",\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n                axisLine: {\r\n                    show: true,\r\n                },\r\n                interval: 1000 * 3600 * 24 * 35,\r\n                axisLabel: {\r\n                    formatter: (value) => {\r\n                        return moment(value).format(\"MMM-YY\");\r\n                    },\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    type: \"value\",\r\n                    nameTextStyle: {\r\n                        padding: [0, 0, 15, 0],\r\n                        fontSize: 16\r\n                    }\r\n                },\r\n\r\n            ],\r\n            series: [\r\n                {\r\n                    type: \"line\",\r\n                    name: \"Done\",\r\n                    lineStyle: {\r\n                        width: 0,\r\n                    },\r\n                    areaStyle: {},\r\n                    stack: \"linestack\",\r\n                    symbolSize: 0,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 10],\r\n                        [\"2020-07-14T10:32:12\", 20],\r\n                        [\"2020-08-13T10:32:12\", 30],\r\n                        [\"2020-08-23T10:32:12\", 40],\r\n                        [\"2020-09-06T10:32:12\", 45],\r\n                        [\"2020-09-15T10:32:12\", 60],\r\n                    ],\r\n                },\r\n                {\r\n                    type: \"line\",\r\n                    stack: \"linestack\",\r\n                    name: \"Ready to Delivery\",\r\n                    lineStyle: {\r\n                        width: 0,\r\n                    },\r\n                    areaStyle: {},\r\n                    symbolSize: 0,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 5],\r\n                        [\"2020-07-14T10:32:12\", 10],\r\n                        [\"2020-08-13T10:32:12\", 10],\r\n                        [\"2020-08-23T10:32:12\", 20],\r\n                        [\"2020-09-06T10:32:12\", 10],\r\n                        [\"2020-09-15T10:32:12\", 10],\r\n                    ],\r\n                },\r\n                {\r\n                    type: \"line\",\r\n                    stack: \"linestack\",\r\n                    name: \"Waiting on link\",\r\n                    lineStyle: {\r\n                        width: 0,\r\n                    },\r\n                    areaStyle: {},\r\n                    symbolSize: 0,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 10],\r\n                        [\"2020-07-14T10:32:12\", 20],\r\n                        [\"2020-08-13T10:32:12\", 10],\r\n                        [\"2020-08-23T10:32:12\", 10],\r\n                        [\"2020-09-06T10:32:12\", 10],\r\n                        [\"2020-09-15T10:32:12\", 20],\r\n                    ],\r\n                },\r\n                {\r\n                    type: \"line\",\r\n                    stack: \"linestack\",\r\n                    name: \"Peer Review\",\r\n                    lineStyle: {\r\n                        width: 0,\r\n                    },\r\n                    areaStyle: {},\r\n                    symbolSize: 0,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 10],\r\n                        [\"2020-07-14T10:32:12\", 5],\r\n                        [\"2020-08-13T10:32:12\", 10],\r\n                        [\"2020-08-23T10:32:12\", 15],\r\n                        [\"2020-09-06T10:32:12\", 20],\r\n                        [\"2020-09-15T10:32:12\", 10],\r\n                    ],\r\n                },\r\n                {\r\n                    type: \"line\",\r\n                    stack: \"linestack\",\r\n                    name: \"Ready to Review\",\r\n                    lineStyle: {\r\n                        width: 0,\r\n                    },\r\n                    areaStyle: {},\r\n                    symbolSize: 0,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 5],\r\n                        [\"2020-07-14T10:32:12\", 10],\r\n                        [\"2020-08-13T10:32:12\", 10],\r\n                        [\"2020-08-23T10:32:12\", 15],\r\n                        [\"2020-09-06T10:32:12\", 10],\r\n                        [\"2020-09-15T10:32:12\", 20],\r\n                    ],\r\n                },\r\n            ],\r\n            color: [\"#68ACCC\", \"#BDDCFC\", \"#BF88C0\", \"#F4BFC2\", \"#F7DB87\", \"#7BDED1\"],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.option}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cfd;\r\n","import React, {Component} from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport moment from 'moment/moment.js';\r\n\r\nclass Cts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: \"#5a6f8c\",\r\n                    },\r\n                },\r\n                backgroundColor: 'rgba(245, 245, 245, 0.8)',\r\n                borderWidth: 1,\r\n                borderColor: '#ccc',\r\n                padding: 10,\r\n                textStyle: {\r\n                    color: '#000'\r\n                },\r\n                extraCssText: 'width: 170px'\r\n            },\r\n            grid: {\r\n                right: \"7%\",\r\n                left: \"0%\",\r\n                bottom: \"1%\",\r\n                top: \"7%\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: {\r\n                type: \"time\",\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n                axisLine: {\r\n                    show: true,\r\n                },\r\n                interval: 1000 * 3600 * 24 * 35,\r\n                axisLabel: {\r\n                    formatter: (value) => {\r\n                        return moment(value).format(\"MMM-YY\");\r\n                    },\r\n                },\r\n            },\r\n            yAxis: {\r\n                splitLine: {\r\n                    show: true,\r\n                },\r\n                axisLabel: {\r\n                    show: true,\r\n                },\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                interval: 50,\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    type: \"scatter\",\r\n                    name: \"To DO\",\r\n                    symbolSize: 10,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 43],\r\n                        [\"2020-07-14T10:32:12\", 40],\r\n                        [\"2020-08-13T10:32:12\", 120],\r\n                        [\"2020-08-23T10:32:12\", 15],\r\n                        [\"2020-09-06T10:32:12\", 10],\r\n                        [\"2020-09-15T10:32:12\", 160],\r\n                        [\"2020-10-06T10:32:12\", 11],\r\n                        [\"2020-11-15T10:32:12\", 20],\r\n                    ],\r\n                },\r\n                {\r\n                    type: \"scatter\",\r\n                    name: \"Done\",\r\n                    symbolSize: 10,\r\n                    data: [\r\n                        [\"2020-07-05T10:32:12\", 160],\r\n                        [\"2020-07-14T10:32:12\", 30],\r\n                        [\"2020-08-13T10:32:12\", 100],\r\n                        [\"2020-08-23T10:32:12\", 60],\r\n                        [\"2020-09-06T10:32:12\", 92],\r\n                        [\"2020-09-15T10:32:12\", 45],\r\n                    ],\r\n                },\r\n            ],\r\n            color: [\"#68ACCC\", \"#BDDCFC\", \"#BF88C0\", \"#F4BFC2\", \"#F7DB87\", \"#7BDED1\"],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts option={this.options} style={{width: '100%'}}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cts;\r\n","import React, {Component} from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nclass Cth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.option = {\r\n            grid: {\r\n                right: \"7%\",\r\n                left: \"0%\",\r\n                bottom: \"1%\",\r\n                top: \"7%\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: [\r\n                {\r\n                    splitLine: {\r\n                        show: false,\r\n                    },\r\n                    type: 'value',\r\n                    axisPointer: {\r\n                        type: 'none',\r\n                    },\r\n\r\n                }\r\n            ],\r\n            color: [\"#68ACCC\", \"#BDDCFC\", \"#BF88C0\", \"#F4BFC2\", \"#F7DB87\", \"#7BDED1\"],\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n\r\n                }\r\n            ],\r\n\r\n            series: [\r\n                {\r\n                    type: \"bar\",\r\n                    data: [\r\n                        [1, 2],\r\n                        [2, 6],\r\n                        [3, 3],\r\n                        [4, 1],\r\n                        [5, 0],\r\n                        [6, 1],\r\n                        [7, 1],\r\n                        [8, 2],\r\n                        [9, 0],\r\n                        [10, 0],\r\n                        [11, 0],\r\n                        [12, 1],\r\n                        [13, 1],\r\n                        [14, 2],\r\n                        [15, 2],\r\n                        [16, 1]\r\n                    ],\r\n                    markLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(74,85,104,0.65)',\r\n                            type: 'dashed',\r\n                            width: 3,\r\n                        },\r\n                        label: {\r\n                            position: 'start',\r\n                            color: 'black',\r\n                            fontSize: 12,\r\n                        },\r\n                        data: [\r\n                            [\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'max',\r\n                                    label: {\r\n                                        formatter: '50%',\r\n                                    },\r\n                                    xAxis: 3,\r\n                                },\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'min',\r\n                                    xAxis: 3,\r\n                                }\r\n                            ],\r\n                            [\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'max',\r\n                                    label: {\r\n                                        formatter: '70%',\r\n                                    },\r\n                                    xAxis: 8,\r\n                                },\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'min',\r\n                                    xAxis: 8,\r\n                                }\r\n                            ],\r\n                            [\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'max',\r\n                                    label: {\r\n                                        formatter: '85%',\r\n                                    },\r\n                                    xAxis: 14,\r\n                                },\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'min',\r\n                                    xAxis: 14,\r\n                                }\r\n                            ],\r\n                            [\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'max',\r\n                                    label: {\r\n                                        formatter: '95%',\r\n                                    },\r\n                                    xAxis: 15,\r\n                                },\r\n                                {\r\n                                    symbol: 'none',\r\n                                    yAxis: 'min',\r\n                                    xAxis: 15,\r\n                                }\r\n                            ],\r\n                        ]\r\n                    },\r\n                },\r\n            ],\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts option={this.option}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cth;\r\n","import React, {Component} from 'react';\r\nimport Cfd from \"./Cfd\";\r\nimport Cts from \"./Cts\";\r\nimport Cth from \"./Cth\";\r\n\r\nclass Charts extends Component {\r\n    render() {\r\n        return (<div className=\"flex flex-wrap w-full my-1\">\r\n                <div className=\"h-auto xl:w-1/3 md:w-1/2 w-full my-1\">\r\n                    <div\r\n                        className=\"text-center bg-white border border-gray-500 rounded m-2 h-full justify-center content-center flex-wrap flex\">\r\n                        <p className=\"p-1 font-sans text-gray-700 font-medium text-sm\">\r\n                            Cumulative Flow Diagram\r\n                        </p>\r\n                        <div className=\"w-full p-2\">\r\n                            <Cfd/>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-auto xl:w-1/3 md:w-1/2 w-full my-1\">\r\n                    <div\r\n                        className=\"bg-white border border-gray-500 rounded m-2 h-full justify-center content-center flex-wrap flex\">\r\n                        <p className=\"text-center font-sans text-gray-700 font-medium text-sm\">\r\n                            Cycle Time Scatterplot\r\n                        </p>\r\n                        <div className=\"w-full p-2\">\r\n                            <Cts/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-auto xl:w-1/3 md:w-1/2 w-full my-1\">\r\n                    <div\r\n                        className=\"text-center bg-white border border-gray-500 rounded m-2 h-full justify-center content-center flex-wrap flex\">\r\n                        <p className=\"font-sans text-gray-700 font-medium text-sm pt-0\">\r\n                            Cycle Time Histogram\r\n                        </p>\r\n                        <div className=\"w-full p-2\">\r\n                            <Cth/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Charts;\r\n","import React, {Component} from 'react';\r\nimport Metrics from \"./Metrics/Metrics\";\r\nimport Charts from \"./Charts/Charts\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"w-full lg:ml-56 bg-white mt-20\">\r\n                <Metrics/>\r\n                <Charts/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {Component} from 'react';\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nclass Work extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        switch (this.props.work.priority) {\r\n            case \"High\":\r\n                this.state = {color: \"bg-pink-500\"};\r\n                break;\r\n            case \"Medium\":\r\n                this.state = {color: \"bg-blue-500\"};\r\n                break;\r\n            case \"Low\":\r\n                this.state = {color: \"bg-green-500\"};\r\n                break;\r\n            default:\r\n                this.state = {color: \"bg-blue-500\"}\r\n        }\r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.props.togglemodalworkform(this.props.work);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (prevProps.work.priority !== this.props.work.priority) {\r\n            switch (this.props.work.priority) {\r\n                case \"High\":\r\n                    this.setState({color: \"bg-pink-500\"});\r\n                    break;\r\n                case \"Medium\":\r\n                    this.setState({color: \"bg-blue-500\"});\r\n                    break;\r\n                case \"Low\":\r\n                    this.setState({color: \"bg-green-500\"});\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Draggable draggableId={this.props.work.id} index={this.props.index}>\r\n                {provided => (\r\n                    <div ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         {...provided.dragHandleProps} className={\"bg-white m-3 w-auto shadow-lg rounded\"}\r\n                         key={this.props.work.id}>\r\n                        <div className=\"flex cursor-pointer\" onClick={this.togglemodal}>\r\n                            <div className=\"p-2\">\r\n                                <div className=\"flex\">\r\n                                    <div className=\"pl-1\">\r\n                                        <p className={this.state.color + \" text-gray-100 text-xs shadow rounded-full px-4\"}>\r\n                                            {this.props.work.priority}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-blue-800 text-left lg:text-lg md:text-base\">\r\n                                    <p className=\"font-medium py-2\">\r\n                                        {this.props.work.name}\r\n                                    </p>\r\n                                    <div className=\"flex pr-4\">\r\n                                        {this.props.work.tags.map((tag, index) => {\r\n                                            return <div className=\"pl-1\" key={index}>\r\n                                                <p\r\n                                                    className=\"bg-gray-300 text-blue-800 font-medium text-xs shadow-sm rounded-full px-2\">\r\n                                                    {tag.name}\r\n                                                </p>\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"flex\">\r\n                                        <div className=\"p-1 float-left\">\r\n                                            <p className=\"text-blue-700 font-medium text-sm\">\r\n                                                <i className=\"fa fa-user pr-1\" aria-hidden=\"true\"/>\r\n                                                {this.props.work.peoples} Peoples\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"p-1 float-right\">\r\n                                            <p className=\"text-blue-700 font-medium text-sm\">\r\n                                                <i className=\"fa fa-comments pr-1\" aria-hidden=\"true\"/>\r\n                                                {this.props.work.comments} Comments\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Work;\r\n","import React, {Component} from 'react';\r\nimport Work from \"./Work\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\n\r\nclass Cycle extends Component {\r\n    creatework = () => {\r\n        let work = {\r\n            name: \"\",\r\n            description: \"\",\r\n            cycleId: this.props.cycle.id,\r\n            tags: [],\r\n            priority: \"Low\",\r\n        }\r\n        this.props.togglemodalworkform(work);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full sm:w-full md:w-1/2 lg:1/4 xl:w-1/4\">\r\n                <div\r\n                    className={\"rounded text-gray-700 cardpannel m-2 shadow-inner border-t-4 \" + this.props.cycle.color}>\r\n                    <div className=\"pt-2 pl-4 h-12 primarycolor\">\r\n                        <p className=\"text-xl float-left font-sans font-bold\">\r\n                            {this.props.cycle.name}\r\n                        </p>\r\n                        <span className=\"float-right pt-1 pr-3 cursor-pointer\" onClick={this.creatework}>\r\n                                <i className=\"fa fa-plus\"/>\r\n                            </span>\r\n                    </div>\r\n                    <Droppable droppableId={this.props.index + \"\"}>\r\n                        {(provided) => (\r\n                            <div ref={provided.innerRef}\r\n                                 {...provided.droppableProps}\r\n                            >\r\n                                <div className=\"min-h-full min-w-full p-2\">\r\n                                    {this.props.cycle.workList.map((work, index) => <Work work={work} key={work.id}\r\n                                                                                          index={index}\r\n                                                                                          togglemodalworkform={this.props.togglemodalworkform}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </Droppable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cycle;\r\n","import React, {Component} from 'react';\r\n\r\nclass WorkModalForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {work: Object.assign({}, this.props.work)}\r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.props.togglemodalworkform(this.state.work);\r\n    }\r\n    removeworkfrommodal = () => {\r\n        this.props.removework(this.state.work);\r\n        this.props.togglemodalworkform(this.state.work);\r\n    }\r\n    deleteworkfrommodal = () => {\r\n        this.props.deletework(this.state.work);\r\n        this.props.togglemodalworkform(this.state.work);\r\n    }\r\n    formchanges = (event) => {\r\n        let work = Object.assign({}, this.state.work);\r\n        switch (event.target.id) {\r\n            case \"name\":\r\n                work.name = event.target.value;\r\n                break;\r\n            case \"description\":\r\n                work.description = event.target.value;\r\n                break;\r\n            case \"priority\":\r\n                work.priority = event.target.value;\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n        this.setState({work: work});\r\n    }\r\n    tagenter = (event) => {\r\n        if (event.keyCode === 13) {\r\n            let work = this.state.work;\r\n            let tags = Object.assign([], work.tags);\r\n            tags.push({name: event.target.value});\r\n            work.tags = tags;\r\n            this.setState({work: work});\r\n            event.target.value = \"\";\r\n        } else {\r\n            if (event.keyCode === 8) {\r\n                let work = this.state.work;\r\n                let tags = Object.assign([], work.tags);\r\n                tags.pop();\r\n                work.tags = tags;\r\n                this.setState({work: work});\r\n                event.target.value = \"\";\r\n            }\r\n        }\r\n    }\r\n    savechanges = () => {\r\n        this.props.modifywork(this.state.work);\r\n        this.props.togglemodalworkform(this.state.work);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.work !== this.props.work) {\r\n            this.setState({work: Object.assign({}, this.props.work)});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full hidden\" ref={this.props.wrapper}>\r\n                <div className=\"fixed h-full w-full bg-gray-900 bg-opacity-75 z-10 flex justify-center\">\r\n                    <div className=\"bg-white lg:w-1/2 w-full self-center m-4 lg:m-0 z-50\">\r\n                        <div className=\"flex-1\">\r\n                            <div className=\"float-right text-gray-700 text-2xl pr-2\">\r\n                                <i className=\"fa fa-times cursor-pointer\" onClick={this.togglemodal}\r\n                                   aria-hidden=\"true\"/>\r\n                            </div>\r\n                            <div className=\"w-full text-gray-700 text-lg font-medium p-2 text-center\">\r\n                                {this.state.work.name}\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4\">\r\n                                    <div className=\"mb-4 flex flex-wrap w-full\">\r\n                                        <div className=\"lg:w-1/2 w-full lg:pr-2\">\r\n                                            <label className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                                   htmlFor=\"name\">\r\n                                                Name\r\n                                            </label>\r\n                                            <input\r\n                                                className=\"bg-gray-100 appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                value={this.state.work.name}\r\n                                                onChange={this.formchanges}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"lg:w-1/2 w-full lg:pl-2\">\r\n                                            <label className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                                   htmlFor=\"name\">\r\n                                                Tags\r\n                                            </label>\r\n                                            <div\r\n                                                className=\"bg-gray-100 appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                id=\"name\"\r\n                                            >\r\n                                                <div className=\"flex\">\r\n                                                    {this.state.work.tags.map((tag, index) => {\r\n                                                        return <div className=\"pl-1 pt-1\" key={index}>\r\n                                                            <p\r\n                                                                className=\"bg-gray-300 text-blue-800 font-medium text-sm shadow-sm rounded-full px-2\">\r\n                                                                {tag.name}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    })}\r\n                                                    <input\r\n                                                        className=\"focus:outline-none w-full h-full appearance-none bg-gray-100\"\r\n                                                        id=\"tags\"\r\n                                                        type=\"text\"\r\n                                                        onKeyDown={this.tagenter}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4\">\r\n                                        <label\r\n                                            className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                            htmlFor=\"description\"\r\n                                        >\r\n                                            Description\r\n                                        </label>\r\n                                        <textarea\r\n                                            onChange={this.formchanges}\r\n                                            value={this.state.work.description}\r\n                                            rows=\"4\"\r\n                                            cols=\"50\"\r\n                                            className=\"bg-gray-100 p-1 appearance-none border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                            id=\"description\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"w-full mb-4 flex\">\r\n                                        <div className=\"pr-2 lg:w-1/2\">\r\n                                            <label className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                                   htmlFor=\"name\">\r\n                                                Priority\r\n                                            </label>\r\n                                            <select\r\n                                                className=\"bg-gray-100 appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                id=\"priority\"\r\n                                                value={this.state.work.priority} onChange={this.formchanges}\r\n                                            >\r\n                                                <option value=\"Low\">Low</option>\r\n                                                <option value=\"Medium\">Medium</option>\r\n                                                <option value=\"High\">High</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"flex lg:w-1/2 p-5\">\r\n                                            <label\r\n                                                className=\"pt-4 text-gray-600 text-sm font-semibold mb-2\"\r\n                                            >\r\n                                                Assignee:\r\n                                            </label>\r\n                                            <div className=\"p-2 cursor-pointer\" title=\"Tushar Chaudhari\">\r\n                                                <img alt=\"userprofile\"\r\n                                                     className=\"flex h-10 rounded-full shadow-xs shadow-md\"\r\n                                                     src=\"/tushar.webp\"/>\r\n                                            </div>\r\n                                            <div className=\"p-2\">\r\n                                                <div\r\n                                                    className=\"flex h-10 rounded-full text-blue-700 shadow-md border-2 border-blue-300 hover:bg-blue-600 duration-300 hover:text-gray-200\"\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <i className=\"fa fa-plus m-3\" aria-hidden=\"true\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"flex\">\r\n                                            <div\r\n                                                className=\"m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer\"\r\n                                                onClick={this.savechanges}\r\n                                            >\r\n                                                Save\r\n                                            </div>\r\n                                            <div\r\n                                                className=\"m-2 text-red-500 border-red-500 border-2 hover:text-white transition hover:bg-red-500 font-semibold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer\"\r\n                                                onClick={this.deleteworkfrommodal}\r\n                                            >\r\n                                                Delete\r\n                                            </div>\r\n                                            <div\r\n                                                className={this.props.removeshow + \" m-2 text-pink-500 border-pink-500 border-2 hover:text-white transition hover:bg-pink-500 font-semibold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer\"}\r\n                                                onClick={this.removeworkfrommodal}\r\n                                            >\r\n                                                Remove\r\n                                            </div>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800 cursor-pointer\"\r\n                                            onClick={this.togglemodal}\r\n                                        >\r\n                                            cancel\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkModalForm;\r\n","import React, {Component} from 'react';\r\n\r\nclass Projectinfo extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"flex\">\r\n                <div className=\"flex\">\r\n                    <p className=\"p-8 primarycolor font-medium font-sans text-2xl\">\r\n                        Project Name\r\n                    </p>\r\n                </div>\r\n                <div className=\"pt-8 p-2 hidden sm:block\">\r\n                    <img alt=\"userprofile\" className=\"flex h-10 rounded-full shadow-xs shadow-md\" src=\"/tushar.webp\"/>\r\n                </div>\r\n                <div className=\"pt-8 p-2\">\r\n                    <div\r\n                        className=\"flex h-10 rounded-full text-blue-700 shadow-md border-2 border-blue-300 hover:bg-blue-600 duration-300 hover:text-gray-200\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        <i className=\"fa fa-plus m-3\" aria-hidden=\"true\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projectinfo;\r\n","class ClientCrud {\r\n    static Resthost: string = \"http://localhost:8080/api/project\";\r\n\r\n    static update(objects, name) {\r\n        return fetch(this.Resthost + \"/\" + name + \"/update\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(objects),\r\n        }).then((req) => req.json());\r\n    }\r\n\r\n    static delete(objects, name) {\r\n        return fetch(this.Resthost + \"/\" + name + \"/delete\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(objects),\r\n        });\r\n    }\r\n\r\n    static drag(objects, name) {\r\n        fetch(this.Resthost + \"/\" + name + \"/drag\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(objects),\r\n        });\r\n    }\r\n}\r\n\r\nexport default ClientCrud;\r\n","import ClientCrud from \"./ClientCrud\";\r\n\r\nclass UserRest {\r\n    static getBoard() {\r\n        return fetch(ClientCrud.Resthost + \"/board\").then((res) => res.json());\r\n    }\r\n\r\n    static getTimeline() {\r\n        return fetch(ClientCrud.Resthost + \"/timeline\").then((res) => res.json());\r\n    }\r\n}\r\n\r\nexport default UserRest;\r\n","import React, {Component} from 'react';\r\nimport Cycle from \"./Cycle\";\r\nimport {DragDropContext} from \"react-beautiful-dnd\";\r\nimport WorkModalForm from \"../../GanntChart/WorkModalForm\";\r\nimport Projectinfo from \"./Projectinfo\";\r\nimport UserRest from \"../../../Client/UserRest\";\r\nimport ClientCrud from \"../../../Client/ClientCrud\";\r\n\r\n\r\nclass Kanban extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.borders = \"border-red-400 border-blue-400 border-green-400\";\r\n        this.workmodalwrapper = React.createRef();\r\n        this.state = {\r\n            currentwork: {\r\n                name: \"\",\r\n                description: \"\",\r\n                cycleId: \"\",\r\n                tags: []\r\n            },\r\n            cycle: []\r\n        }\r\n    }\r\n\r\n    togglemodalworkform = (work) => {\r\n        const wrap = this.workmodalwrapper.current;\r\n        this.setState({currentwork: work});\r\n        wrap.classList.toggle('hidden');\r\n    }\r\n    modifywork = (work) => {\r\n        ClientCrud.update(work, \"work\").then(u => UserRest.getBoard().then((data) => {\r\n            this.setState({cycle: data});\r\n        }));\r\n    }\r\n    removework = (work) => {\r\n    }\r\n\r\n    onDragEnd = result => {\r\n        if (result != null && result.destination != null) {\r\n            this.state.cycle[parseInt(result.destination.droppableId)].workList.splice(result.destination.index, 0,\r\n                this.state.cycle[parseInt(result.source.droppableId)].workList.splice(result.source.index, 1)[0]);\r\n            let work = Object.assign({}, this.state.cycle[parseInt(result.destination.droppableId)].workList[result.destination.index])\r\n            work.cycleId = this.state.cycle[parseInt(result.destination.droppableId)].id;\r\n            work.position = result.destination.index;\r\n            ClientCrud.drag(work, \"work\");\r\n            this.setState({});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserRest.getBoard().then(data => this.setState({cycle: data}));\r\n    }\r\n\r\n\r\n    deletework = (work) => {\r\n        ClientCrud.delete(work, \"work\").then(u =>\r\n            UserRest.getBoard().then((data) => {\r\n                this.setState({cycle: data});\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"w-full h-full\">\r\n            <WorkModalForm wrapper={this.workmodalwrapper} togglemodalworkform={this.togglemodalworkform}\r\n                           work={this.state.currentwork} modifywork={this.modifywork}\r\n                           removework={this.removework} deletework={this.deletework}\r\n                           removeshow={\"hidden\"}\r\n            />\r\n            <div className=\"lg:ml-56 mt-20 bg-white min-h-screen\">\r\n                <Projectinfo/>\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    <div className=\"flex flex-wrap\">\r\n                        {this.state.cycle.map((cycle, index) => <Cycle key={index}\r\n                                                                       cycle={cycle}\r\n                                                                       index={index}\r\n                                                                       togglemodalworkform={this.togglemodalworkform}\r\n                        />)}\r\n                    </div>\r\n                </DragDropContext></div>\r\n        </div>;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Kanban;\r\n","import React, {Component} from 'react';\r\nimport Kanban from \"./Kanban/Kanban\";\r\n\r\nclass Board extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Kanban/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport moment from \"moment\";\r\n\r\nclass Gannt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let epics = this.props.epics;\r\n        this.state = {\r\n            option: {\r\n                dataZoom: [\r\n                    {\r\n                        type: 'slider',\r\n                        filterMode: 'none',\r\n                        showDataShadow: true,\r\n                        bottom: 10,\r\n                        height: 10,\r\n                        borderColor: 'transparent',\r\n                        backgroundColor: '#e2e2e2',\r\n                        handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\r\n                        handleSize: 20,\r\n                        handleStyle: {\r\n                            shadowBlur: 6,\r\n                            shadowOffsetX: 1,\r\n                            shadowOffsetY: 2,\r\n                            shadowColor: '#aaa'\r\n                        },\r\n                        labelFormatter: ''\r\n                    }, {\r\n                        type: 'inside',\r\n                        filterMode: 'weakFilter'\r\n                    }],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    formatter: this.tooltipformat,\r\n                    backgroundColor: 'rgba(245, 245, 245, 0.8)',\r\n                    borderWidth: 1,\r\n                    borderColor: '#ccc',\r\n                    padding: 10,\r\n                    textStyle: {\r\n                        color: '#000'\r\n                    },\r\n                },\r\n                grid: {\r\n                    left: \"3%\",\r\n                    right: \"3%\",\r\n                    bottom: \"10%\",\r\n                    top: \"1%\",\r\n                    containLabel: true,\r\n                },\r\n                xAxis: {\r\n                    scale: true,\r\n                    splitLine: {show: false},\r\n                    type: 'value',\r\n                    axisLabel: {\r\n                        formatter: this.daytodateyear,\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    axisTick: {\r\n                        show: false,\r\n                    },\r\n                    axisLine: {\r\n                        show: false,\r\n                    },\r\n                    axisPointer: {\r\n                        type: 'none',\r\n                    },\r\n                    type: 'category',\r\n                    data: epics.map(epic => epic.name)\r\n                },\r\n                series: [\r\n                    {\r\n                        name: 'hiden',\r\n                        type: 'bar',\r\n                        stack: 'a',\r\n                        itemStyle: {\r\n                            barBorderColor: 'rgba(0,0,0,0)',\r\n                            color: 'rgba(0,0,0,0)'\r\n                        },\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                barBorderColor: 'rgba(0,0,0,0)',\r\n                                color: 'rgba(0,0,0,0)'\r\n                            }\r\n                        },\r\n                        data: epics.map((epic, index) => {\r\n                            return ({\r\n                                name: epic.name,\r\n                                value: moment(epic.startingDate).dayOfYear(),\r\n                                year: moment(epic.startingDate).format(\"YYYY\")\r\n                            });\r\n                        })\r\n                    },\r\n                    {\r\n                        type: 'bar',\r\n                        showBackground: true,\r\n                        backgroundStyle: {\r\n                            color: '#efefef'\r\n                        },\r\n                        clip: true,\r\n                        name: 'work1',\r\n                        stack: 'a',\r\n                        barMaxWidth: 50,\r\n                        label: {\r\n                            show: true,\r\n                            position: 'inside',\r\n                            formatter: (a) => {\r\n                                return a.data.name;\r\n                            },\r\n                        },\r\n                        data: epics.map((epic, index) => {\r\n                            let itemstyle = {color: \"#3e95cd\", barBorderRadius: 10};\r\n                            if (epic.progress <= 33) {\r\n                                itemstyle.color = \"#FA8989\";\r\n                            } else {\r\n                                if (epic.progress > 33 && epic.progress <= 66) {\r\n                                    itemstyle.color = \"#3e95cd\";\r\n                                }\r\n                                if (epic.progress > 66) {\r\n                                    itemstyle.color = \"#3cba9f\";\r\n                                }\r\n                            }\r\n                            return ({\r\n                                name: epic.name,\r\n                                value: moment(epic.endingDate).dayOfYear() - moment(epic.startingDate).dayOfYear(),\r\n                                itemStyle: itemstyle\r\n                            });\r\n                        }),\r\n                    }\r\n                ],\r\n            }\r\n        }\r\n    }\r\n\r\n    tooltipformat = (param) => {\r\n        if (param.length === 2) {\r\n            let s = \"<p style=\\\"text-align:center\\\">\" + param[0].name + \"</p>\";\r\n            s = s + \"Starting Date : \" + this.daytodate(param[0].value, param[0].data.year) + \"<br/> Ending Date : \" + this.daytodate(param[0].value + param[1].value, param[0].data.year);\r\n            return s;\r\n        }\r\n    }\r\n    daytodate = (value, year) => {\r\n        let date = moment(year, 'YYYY').dayOfYear(value);\r\n        return date.format(\"DD-MMMM-YYYY\");\r\n    }\r\n    daytodateyear = (value) => {\r\n        let date = moment().dayOfYear(value);\r\n        return date.format(\"DD-MMM\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps !== this.props) {\r\n            let epics = this.props.epics;\r\n            this.setState({\r\n                option: {\r\n                    dataZoom: [\r\n                        {\r\n                            type: 'slider',\r\n                            filterMode: 'none',\r\n                            showDataShadow: true,\r\n                            bottom: 10,\r\n                            height: 10,\r\n                            borderColor: 'transparent',\r\n                            backgroundColor: '#e2e2e2',\r\n                            handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\r\n                            handleSize: 20,\r\n                            handleStyle: {\r\n                                shadowBlur: 6,\r\n                                shadowOffsetX: 1,\r\n                                shadowOffsetY: 2,\r\n                                shadowColor: '#aaa'\r\n                            },\r\n                            labelFormatter: ''\r\n                        }, {\r\n                            type: 'inside',\r\n                            filterMode: 'weakFilter'\r\n                        }],\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        formatter: this.tooltipformat,\r\n                        backgroundColor: 'rgba(245, 245, 245, 0.8)',\r\n                        borderWidth: 1,\r\n                        borderColor: '#ccc',\r\n                        padding: 10,\r\n                        textStyle: {\r\n                            color: '#000'\r\n                        },\r\n                    },\r\n                    grid: {\r\n                        left: \"3%\",\r\n                        right: \"3%\",\r\n                        bottom: \"10%\",\r\n                        top: \"1%\",\r\n                        containLabel: true,\r\n                    },\r\n                    xAxis: {\r\n                        scale: true,\r\n                        splitLine: {show: false},\r\n                        type: 'value',\r\n                        axisLabel: {\r\n                            formatter: this.daytodateyear,\r\n                        },\r\n                    },\r\n                    yAxis: {\r\n                        axisTick: {\r\n                            show: false,\r\n                        },\r\n                        axisLine: {\r\n                            show: false,\r\n                        },\r\n                        axisPointer: {\r\n                            type: 'none',\r\n                        },\r\n                        type: 'category',\r\n                        data: epics.map(epic => epic.name)\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: 'hiden',\r\n                            type: 'bar',\r\n                            stack: 'a',\r\n                            itemStyle: {\r\n                                barBorderColor: 'rgba(0,0,0,0)',\r\n                                color: 'rgba(0,0,0,0)'\r\n                            },\r\n                            emphasis: {\r\n                                itemStyle: {\r\n                                    barBorderColor: 'rgba(0,0,0,0)',\r\n                                    color: 'rgba(0,0,0,0)'\r\n                                }\r\n                            },\r\n                            data: epics.map((epic, index) => {\r\n                                return ({\r\n                                    name: epic.name,\r\n                                    value: moment(epic.startingDate).dayOfYear(),\r\n                                    year: moment(epic.startingDate).format(\"YYYY\")\r\n                                });\r\n                            })\r\n                        },\r\n                        {\r\n                            type: 'bar',\r\n                            showBackground: true,\r\n                            backgroundStyle: {\r\n                                color: '#efefef'\r\n                            },\r\n                            clip: true,\r\n                            name: 'work1',\r\n                            stack: 'a',\r\n                            label: {\r\n                                show: true,\r\n                                position: 'inside',\r\n                                formatter: (a) => {\r\n                                    return a.data.name;\r\n                                },\r\n                            },\r\n                            data: epics.map((epic, index) => {\r\n                                let itemstyle = {color: \"#3e95cd\", barBorderRadius: 10};\r\n                                if (epic.progress <= 33) {\r\n                                    itemstyle.color = \"#FA8989\";\r\n                                } else {\r\n                                    if (epic.progress > 33 && epic.progress <= 66) {\r\n                                        itemstyle.color = \"#3e95cd\";\r\n                                    }\r\n                                    if (epic.progress > 66) {\r\n                                        itemstyle.color = \"#3cba9f\";\r\n                                    }\r\n                                }\r\n                                return ({\r\n                                    name: epic.name,\r\n                                    value: moment(epic.endingDate).dayOfYear() - moment(epic.startingDate).dayOfYear(),\r\n                                    itemStyle: itemstyle\r\n                                });\r\n                            }),\r\n                        }\r\n                    ],\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts option={this.state.option} style={{width: '100%'}}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gannt;\r\n","import React, {Component} from 'react';\r\n\r\nclass Progressbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.progress <= 33) {\r\n            this.bgcolor = \"#FA8989\";\r\n        } else {\r\n            if (this.props.progress > 33 && this.props.progress <= 66) {\r\n                this.bgcolor = \"#3e95cd\";\r\n            }\r\n            if (this.props.progress > 66) {\r\n                this.bgcolor = \"#3cba9f\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex p-1 lg:px-5 w-full flex-wrap\">\r\n                <div className=\"w-full text-center font-sans font-semibold text-gray-700 p-2\">\r\n                    <p>{this.props.name}</p>\r\n                </div>\r\n                <div className=\"w-full\">\r\n                    <div className=\"p-1 rounded\" style={{background: \"#efefef\"}}>\r\n                        <div\r\n                            className=\" text-xs leading-none py-1 text-center text-white font-sans font-semibold rounded-lg\"\r\n                            style={{width: this.props.progress + \"%\", background: this.bgcolor}}>{this.props.progress}%\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Progressbar;\r\n","import React, {Component} from 'react';\r\n\r\nclass WorksList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        switch (this.props.work.priority) {\r\n            case \"High\":\r\n                this.state = {color: \"bg-pink-500\"};\r\n                break;\r\n            case \"Medium\":\r\n                this.state = {color: \"bg-blue-500\"};\r\n                break;\r\n            case \"Low\":\r\n                this.state = {color: \"bg-green-500\"};\r\n                break;\r\n            default:\r\n                this.state = {color: \"bg-blue-500\"}\r\n        }\r\n    }\r\n\r\n    togglemodalepicform = () => {\r\n        this.props.togglemodalworkform(this.props.work);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (prevProps.work.priority !== this.props.work.priority) {\r\n            switch (this.props.work.priority) {\r\n                case \"High\":\r\n                    this.setState({color: \"bg-pink-500\"});\r\n                    break;\r\n                case \"Medium\":\r\n                    this.setState({color: \"bg-blue-500\"});\r\n                    break;\r\n                case \"Low\":\r\n                    this.setState({color: \"bg-green-500\"});\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"border-l-2 py-1 border-gray-500 w-full\">\r\n                <div className=\"bg-white w-auto m-2 sm:pl-5 rounded hoverbg\" onClick={this.togglemodalepicform}>\r\n                    <div className=\"flex\">\r\n                        <div className=\"p-2\">\r\n                            <div className=\"flex\">\r\n                                <div className=\"pl-1\">\r\n                                    <p className={this.state.color + \" text-gray-100 text-xs shadow rounded-full px-4\"}>\r\n                                        {this.props.work.priority}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-blue-800 text-left lg:text-lg md:text-base\">\r\n                                <p className=\"font-medium py-2\">\r\n                                    {this.props.work.name}\r\n                                </p>\r\n                                <div className=\"flex pr-4\">\r\n                                    {this.props.work.tags.map((tag, index) => {\r\n                                        return <div className=\"pl-1\" key={index}>\r\n                                            <p\r\n                                                className=\"bg-gray-300 text-blue-800 font-medium text-xs shadow-sm rounded-full px-2\">\r\n                                                {tag.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                                <div className=\"flex\">\r\n                                    <div className=\"p-1 float-left\">\r\n                                        <p className=\"text-blue-700 font-medium text-sm\">\r\n                                            <i className=\"fa fa-user pr-1\" aria-hidden=\"true\"/>\r\n                                            {this.props.work.peoples} Peoples\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"p-1 float-right\">\r\n                                        <p className=\"text-blue-700 font-medium text-sm\">\r\n                                            <i className=\"fa fa-comments pr-1\" aria-hidden=\"true\"/>\r\n                                            {this.props.work.comments} Comments\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorksList;\r\n","import React, {Component} from 'react';\r\nimport WorksList from \"./WorksList\";\r\n\r\nclass Epic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapper = React.createRef()\r\n    }\r\n\r\n    togglemodalepicform = () => {\r\n        this.props.togglemodalepicform(this.props.epic);\r\n    }\r\n    addwork = () => {\r\n        this.props.toggleaddnewworkform(this.props.epic);\r\n    }\r\n\r\n    toggleList = () => {\r\n        const wrap = this.wrapper.current;\r\n        wrap.classList.toggle('collapsed');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"p-2 w-full flex text-left flex-wrap border-b-2 hoverbg\">\r\n                    <div className=\"w-11/12 p-2 \" onClick={this.togglemodalepicform}>\r\n                        <h1 className=\"font-sans font-semibold text-blue-800 text-xl\">{this.props.epic.name}</h1>\r\n                        <div className=\"flex text-blue-700\">\r\n                            <div className=\"p-1\">\r\n                                <p className=\" font-medium text-sm\">\r\n                                    <i className=\"fa fa-user pr-1\" aria-hidden=\"true\"/>\r\n                                    {this.props.epic.peoples} Peoples\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"p-1\">\r\n                                <p className=\" font-medium text-sm\">\r\n                                    <i className=\"fa fa-comments pr-1\" aria-hidden=\"true\"/>\r\n                                    {this.props.epic.comments} Comments\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-1/12 text-xl text-blue-800\" onClick={this.toggleList}>\r\n                        <i className=\"fa fa-chevron-down float-right p-2\" style={{cursor: 'pointer'}}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapsible-wrapper collapsed\" ref={this.wrapper}>\r\n                    <ul className=\"pl-4 pr-2 py-2 collapsible w-full\">\r\n                        {this.props.epic.workList.map((work, index) => <WorksList work={work}\r\n                                                                                  key={index}\r\n                                                                                  togglemodalworkform={this.props.togglemodalworkform}\r\n                        />)}\r\n                        <div className=\"text-center h-10 hoverbg text-gray-700 py-1 cursor-pointer\"\r\n                             onClick={this.addwork}\r\n                        >\r\n                            <i className=\"fa fa-plus p-2\"/>\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Epic;\r\n","import React, {Component} from 'react';\r\nimport moment from \"moment\";\r\n\r\nclass EpicModalForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {epic: Object.assign({}, this.props.epic)}\r\n    }\r\n\r\n    togglemodal = () => {\r\n        this.props.togglemodalepicform(this.state.epic);\r\n    }\r\n    formchanges = (event) => {\r\n        let epic = this.state.epic;\r\n        switch (event.target.id) {\r\n            case \"name\":\r\n                epic.name = event.target.value;\r\n                break;\r\n            case \"startingDate\":\r\n                epic.startingDate = new Date(event.target.value);\r\n                break;\r\n            case \"endingDate\":\r\n                epic.endingDate = new Date(event.target.value);\r\n                break;\r\n            case \"description\":\r\n                epic.description = event.target.value;\r\n                break;\r\n\r\n            default :\r\n                break;\r\n        }\r\n        this.setState({epic: epic});\r\n    }\r\n    savechanges = () => {\r\n        this.props.modifyepic(this.state.epic);\r\n        this.props.togglemodalepicform(this.state.epic);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.epic !== this.props.epic) {\r\n            this.setState({epic: Object.assign({}, this.props.epic)})\r\n        }\r\n    }\r\n\r\n    deleteepic = () => {\r\n        this.props.deleteepic(this.state.epic);\r\n        this.props.togglemodalepicform(this.state.epic)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full hidden\" ref={this.props.wrapper}>\r\n                <div className=\"fixed h-full w-full bg-gray-900 bg-opacity-75 z-10 flex justify-center\">\r\n                    <div className=\"bg-white lg:w-1/2 w-full self-center m-4 lg:m-0 z-50\">\r\n                        <div className=\"flex-1\">\r\n                            <div className=\"float-right text-gray-700 text-2xl pr-2\">\r\n                                <i className=\"fa fa-times cursor-pointer\" onClick={this.togglemodal}\r\n                                   aria-hidden=\"true\"/>\r\n                            </div>\r\n                            <div className=\"w-full text-gray-700 text-lg font-medium p-2 text-center\">\r\n                                {this.state.epic.name}\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4\">\r\n                                    <div className=\"mb-4 flex flex-wrap w-full\">\r\n                                        <div className=\"w-full\">\r\n                                            <label className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                                   htmlFor=\"title\">\r\n                                                Name\r\n                                            </label>\r\n                                            <input\r\n                                                className=\"bg-gray-100 appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                value={this.state.epic.name}\r\n                                                onChange={this.formchanges}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"w-full mb-4 flex flex-wrap\">\r\n                                        <div className=\"md:w-1/2 w-full\">\r\n                                            <label className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                                   htmlFor=\"title\">\r\n                                                Starting Date\r\n                                            </label>\r\n                                            <input\r\n                                                className=\"bg-gray-100 appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                id=\"startingDate\"\r\n                                                type=\"date\"\r\n                                                value={moment(this.state.epic.startingDate).format(\"YYYY-MM-DD\")}\r\n                                                onChange={this.formchanges}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"md:w-1/2 w-full\">\r\n                                            <label className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                                   htmlFor=\"title\">\r\n                                                Ending Date\r\n                                            </label>\r\n                                            <input\r\n                                                className=\"bg-gray-100 appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                id=\"endingDate\"\r\n                                                type=\"date\"\r\n                                                onChange={this.formchanges}\r\n                                                value={moment(this.state.epic.endingDate).format(\"YYYY-MM-DD\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-4\">\r\n                                        <label\r\n                                            className=\"block text-gray-600 text-sm font-semibold mb-2\"\r\n                                            htmlFor=\"username\"\r\n                                        >\r\n                                            Description\r\n                                        </label>\r\n                                        <textarea\r\n                                            onChange={this.formchanges}\r\n                                            value={this.state.epic.description}\r\n                                            rows=\"4\"\r\n                                            cols=\"50\"\r\n                                            className=\"bg-gray-100 p-1 appearance-none border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                            id=\"description\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"flex\">\r\n                                        <label\r\n                                            className=\"p-2 text-gray-600 text-sm font-semibold mb-2\"\r\n                                        >\r\n                                            Assignee:\r\n                                        </label>\r\n                                        <div className=\"p-2 cursor-pointer\">\r\n                                            <img alt=\"userprofile\"\r\n                                                 className=\"flex h-10 rounded-full shadow-xs shadow-md\"\r\n                                                 src=\"/tushar.webp\"/>\r\n                                        </div>\r\n                                        <div className=\"p-2\">\r\n                                            <div\r\n                                                className=\"flex h-10 rounded-full text-blue-700 shadow-md border-2 border-blue-300 hover:bg-blue-600 duration-300 hover:text-gray-200\"\r\n                                                style={{cursor: 'pointer'}}\r\n                                            >\r\n                                                <i className=\"fa fa-plus m-3\" aria-hidden=\"true\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"flex\">\r\n                                            <div\r\n                                                className=\"m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer\"\r\n                                                onClick={this.savechanges}\r\n                                            >\r\n                                                Save\r\n                                            </div>\r\n                                            <div\r\n                                                className=\"m-2 text-red-500 border-red-500 border-2 hover:text-white transition hover:bg-red-500 font-semibold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer\"\r\n                                                onClick={this.deleteepic}\r\n                                            >\r\n                                                Delete\r\n                                            </div>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800 cursor-pointer\"\r\n                                            onClick={this.togglemodal}\r\n                                        >\r\n                                            cancel\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EpicModalForm;\r\n","import React, {Component} from 'react';\r\n\r\nclass EpicNewWork extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {works: props.notassignwork};\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (this.props.notassignwork !== this.state.works) {\r\n            this.setState({works: this.props.notassignwork});\r\n        }\r\n    }\r\n\r\n    addwork = () => {\r\n        this.props.togglemodalworkform({\r\n            name: \"\",\r\n            description: \"\",\r\n            epicId: this.props.epic.id,\r\n            priority: \"low\",\r\n            projectId: this.props.epic.projectId,\r\n            tags: []\r\n        });\r\n        this.toggle();\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleaddnewworkform(this.props.epic);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full hidden\" ref={this.props.wrapperref}>\r\n                <div className=\"fixed h-full w-full bg-gray-900 bg-opacity-75 z-10 flex justify-center\">\r\n                    <div className=\"bg-white lg:w-1/2 w-full self-center m-4 lg:m-0 z-50\">\r\n                        <div className=\"flex-1\">\r\n                            <div className=\"float-right text-gray-700 text-2xl pr-2\">\r\n                                <i className=\"fa fa-times cursor-pointer\" onClick={this.toggle}\r\n                                   aria-hidden=\"true\"/>\r\n                            </div>\r\n                            <div className=\"w-full text-gray-700 text-lg font-medium px-8 py-2 text-center\">\r\n                                New Work\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4\">\r\n                                    <div className=\"mb-4 w-full\">\r\n                                        {this.state.works.map((work, index) => {\r\n                                            let onclickwork = () => {\r\n                                                work.epicId = this.props.epic.id;\r\n                                                this.props.modifywork(work);\r\n                                                this.props.toggleaddnewworkform(this.props.epic);\r\n                                            }\r\n\r\n                                            return (<div\r\n                                                className=\"flex-1 text-center h-10 hoverbg text-gray-700 p-2 cursor-pointer\"\r\n                                                key={index} onClick={onclickwork}\r\n                                            >\r\n                                                {work.name}\r\n                                            </div>);\r\n                                        })}\r\n                                        <div\r\n                                            className=\"flex-1 text-center h-10 hoverbg text-gray-700 py-1 cursor-pointer\"\r\n                                            onClick={this.addwork}\r\n                                        >\r\n                                            <i className=\"fa fa-plus p-2 \"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EpicNewWork;\r\n","import ClientCrud from \"./ClientCrud\";\r\n\r\nclass EpicRest {\r\n    static getWorklistwithnoepic() {\r\n        return fetch(ClientCrud.Resthost + '/work/noepic')\r\n            .then(res => res.json())\r\n    }\r\n\r\n}\r\n\r\nexport default EpicRest;","import React, {Component} from 'react';\r\nimport Gannt from \"./Gannt\";\r\nimport Progressbar from \"./Progressbar\";\r\nimport Epic from \"./Epic\";\r\nimport EpicModalForm from \"./EpicModalForm\";\r\nimport WorkModalForm from \"./WorkModalForm\";\r\nimport UserRest from \"../../Client/UserRest\";\r\nimport ClientCrud from \"../../Client/ClientCrud\";\r\nimport EpicNewWork from \"./EpicNewWork\";\r\nimport EpicRest from \"../../Client/EpicRest\";\r\n\r\nclass GanntChart extends Component {\r\n    state = {\r\n        epics: [],\r\n        currentepic: {\r\n            name: \"\",\r\n            description: \"\",\r\n        },\r\n        currentwork: {\r\n            name: \"\",\r\n            description: \"\",\r\n            cycleId: \"\",\r\n            tags: []\r\n        },\r\n        notassignwork: [],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.epicmodalwrapper = React.createRef();\r\n        this.workmodalwrapper = React.createRef();\r\n        this.addepicwork = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserRest.getTimeline().then(\r\n            data => this.setState({epics: data})\r\n        );\r\n    }\r\n\r\n    deleteepic = (epic) => {\r\n        let old = this.state.epics;\r\n        for (let i = 0; i < old.length; i++) {\r\n            if (old[i].id === epic.id) {\r\n                old.splice(i, 1);\r\n            }\r\n        }\r\n        ClientCrud.delete(epic, \"epic\");\r\n        this.setState({epics: old});\r\n    }\r\n    modifyepic = (epic) => {\r\n        ClientCrud.update(epic, \"epic\").then(u => UserRest.getTimeline().then(data => this.setState({epics: data})));\r\n    }\r\n    modifywork = (work) => {\r\n        ClientCrud.update(work, \"work\").then(u => UserRest.getTimeline().then(data => this.setState({epics: data})));\r\n    }\r\n    addepic = () => {\r\n        this.togglemodalepicform(\r\n            {\r\n                name: \"\",\r\n                description: \"\",\r\n                projectId: \"1\"\r\n            }\r\n        );\r\n    }\r\n    removework = (work) => {\r\n        this.removeworkstate(work);\r\n        delete work.epicId;\r\n        ClientCrud.update(work, \"work\");\r\n    }\r\n    deletework = (work) => {\r\n        this.removeworkstate(work);\r\n        ClientCrud.delete(work, \"work\");\r\n    }\r\n    removeworkstate = work => {\r\n        let old = this.state.epics;\r\n        for (let i = 0; i < old.length; i++) {\r\n            if (old[i].id === work.epicId) {\r\n                for (let j = 0; j < old[i].workList.length; j++) {\r\n                    if (old[i].workList[j].id === work.id) {\r\n                        old[i].workList.splice(j, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({epics: old});\r\n    }\r\n    togglemodalepicform = (epic) => {\r\n        const wrap = this.epicmodalwrapper.current;\r\n        this.setState({currentepic: epic});\r\n        wrap.classList.toggle('hidden');\r\n    }\r\n    togglemodalworkform = (work) => {\r\n        const wrap = this.workmodalwrapper.current;\r\n        this.setState({currentwork: work});\r\n        wrap.classList.toggle('hidden');\r\n    }\r\n    toggleaddnewworkform = (epic) => {\r\n        this.setState({currentepic: epic});\r\n        const wrap = this.addepicwork.current;\r\n        wrap.classList.toggle('hidden');\r\n        EpicRest.getWorklistwithnoepic().then(\r\n            data => this.setState({notassignwork: data})\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full\">\r\n                <EpicModalForm wrapper={this.epicmodalwrapper} togglemodalepicform={this.togglemodalepicform}\r\n                               epic={this.state.currentepic} modifyepic={this.modifyepic}\r\n                               deleteepic={this.deleteepic}\r\n                />\r\n                <WorkModalForm wrapper={this.workmodalwrapper} togglemodalworkform={this.togglemodalworkform}\r\n                               work={this.state.currentwork} modifywork={this.modifywork} removework={this.removework}\r\n                               deletework={this.deletework}\r\n                />\r\n                <EpicNewWork wrapperref={this.addepicwork} toggleaddnewworkform={this.toggleaddnewworkform}\r\n                             togglemodalworkform={this.togglemodalworkform} epic={this.state.currentepic}\r\n                             notassignwork={this.state.notassignwork} modifywork={this.modifywork}\r\n                />\r\n                <div className=\"lg:ml-56 mt-20 h-full bg-white\">\r\n                    <div className=\"flex flex-wrap\">\r\n                        <div className=\"w-full\">\r\n                            <div className=\" md:m-2 m-1 rounded h-auto  text-center\">\r\n                                <div className=\"text-center w-full p-2\">\r\n                                    <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                        Gannt Chart\r\n                                    </p>\r\n                                    <Gannt epics={this.state.epics}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"lg:w-1/2 w-full\">\r\n                            <div className=\"md:m-2 m-1 rounded text-sm border border-gray-500 text-center\">\r\n                                <div className=\"text-center w-full p-2\">\r\n                                    <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                        Work Progress Bar\r\n                                    </p>\r\n                                    <div className=\"mt-1\">\r\n                                        {this.state.epics.map(epic => <Progressbar name={epic.name}\r\n                                                                                   progress={epic.progress}\r\n                                                                                   key={epic.id}\r\n                                        />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"lg:w-1/2 w-full\">\r\n                            <div className=\"w-auto md:m-2 m-1 rounded border border-gray-500 text-sm text-center \">\r\n                                <div className=\"p-2\">\r\n                                    <p className=\"font-sans text-gray-700 font-medium text-sm\">\r\n                                        Epic List\r\n                                    </p>\r\n                                    {this.state.epics.map((epic, index) => <Epic epic={epic} key={index}\r\n                                                                                 togglemodalepicform={this.togglemodalepicform}\r\n                                                                                 togglemodalworkform={this.togglemodalworkform}\r\n                                                                                 toggleaddnewworkform={this.toggleaddnewworkform}\r\n                                    />)}\r\n                                    <div className=\"text-center h-10 hoverbg text-gray-700 py-1 cursor-pointer\"\r\n                                         onClick={this.addepic}\r\n                                    >\r\n                                        <i className=\"fa fa-plus p-2 \"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GanntChart;\r\n","import axios from \"axios\";\r\n\r\nclass AuthUtil {\r\n    static getToken(username, password) {\r\n        const config = {\r\n            method: \"post\",\r\n            url:\r\n                \"http://localhost:8080/login?username=\" +\r\n                username +\r\n                \"&password=\" +\r\n                password,\r\n        };\r\n        return axios(config).then((req) => req.data);\r\n    }\r\n\r\n    static checkToken() {\r\n        const config = {\r\n            method: \"get\",\r\n            url: \"http://localhost:8080/login/check\",\r\n        };\r\n        return axios(config).then((req) => req.data);\r\n    }\r\n}\r\n\r\nexport default AuthUtil;\r\n","import React, {Component} from 'react';\r\nimport AuthUtil from \"./Client/AuthUtil\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    formchanges = (event) => {\r\n        switch (event.target.id) {\r\n            case \"email\":\r\n                this.setState({email: event.target.value});\r\n                break;\r\n            case \"password\":\r\n                this.setState({password: event.target.value});\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    savechanges = () => {\r\n        AuthUtil.getToken(this.state.email, this.state.password)\r\n            .then(data => this.props.updateauth(data));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"min-h-screen flex justify-center bg-gray-200\">\r\n                <div className=\"self-center md:w-1/2 w-full\">\r\n                    <div\r\n                        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col flex-1\"\r\n                    >\r\n                        <div className=\"text-2xl text-blue-900 mb-4 font-semibold\">\r\n                            Login\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label\r\n                                className=\"block text-grey-darker text-sm font-bold mb-2\"\r\n                                htmlFor=\"username\"\r\n                            >\r\n                                Username\r\n                            </label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker focus:outline-none\"\r\n                                id=\"email\"\r\n                                type=\"text\"\r\n                                value={this.state.email}\r\n                                onChange={this.formchanges}\r\n                                placeholder=\"Username\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-6\">\r\n                            <label\r\n                                className=\"block text-grey-darker text-sm font-bold mb-2\"\r\n                                htmlFor=\"password\"\r\n                            >\r\n                                Password\r\n                            </label>\r\n                            <input\r\n                                className=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3 focus:outline-none\"\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.formchanges}\r\n                                placeholder=\"******************\"\r\n                            />\r\n                            <p className=\"text-red text-xs italic\">Please choose a password.</p>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <button\r\n                                className=\"bg-blue-500 hover:bg-blue-800 text-white font-bold py-2 px-4 rounded focus:outline-none\"\r\n                                type=\"button\"\r\n                                onClick={this.savechanges}\r\n                            >\r\n                                Sign In\r\n                            </button>\r\n                            <div\r\n                                className=\"inline-block align-baseline font-bold text-sm text-blue hover:text-blue-darker\"\r\n                            >\r\n                                Forgot Password?\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\n\r\nclass MainNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.projects = React.createRef()\r\n    }\r\n\r\n    toggleprojects = () => {\r\n        const wrap = this.projects.current;\r\n        wrap.classList.toggle('hidden')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"bg-white h-20 border-b border-gray-500 fixed min-h-0 w-full lg:block hidden z-10\">\r\n                <div className=\"flex-row\">\r\n                    <div className=\"font-semibold font-sans text-gray-700 ml-56\">\r\n                        <div className=\"flex float-left\">\r\n                            <button\r\n                                className=\"flex my-5 ml-10 hoverbg text-xl rounded border border-gray-500 cursor-pointer focus:outline-none\">\r\n                                <p className=\"py-1 px-5 font-semibold\">Your Work</p>\r\n                            </button>\r\n                            <button\r\n                                className=\"flex my-5 ml-8 hoverbg rounded border border-gray-500 cursor-pointer w-40 focus:outline-none\"\r\n                            >\r\n                                <p className=\"py-1 px-5 text-xl font-semibold\">Projects</p>\r\n                                <i className=\"fas fa-chevron-down py-3 px-5\" aria-hidden=\"true\"\r\n                                   onClick={this.toggleprojects}\r\n                                />\r\n                                <div ref={this.projects}\r\n                                     className=\"bg-white absolute mt-12 border-gray-500 border-l border-r border-t w-40 hidden font-semibold\">\r\n                                    <div\r\n                                        className=\"block hoverbg text-xl rounded border-b border-gray-500 cursor-pointer\">\r\n                                        <p className=\"py-1 px-10\">Project 1</p>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"block hoverbg text-xl rounded border-b border-gray-500 cursor-pointer\">\r\n                                        <p className=\"py-1 px-10\">Project 1</p>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"block hoverbg text-xl rounded border-b border-gray-500 cursor-pointer\">\r\n                                        <p className=\"py-1 px-10\">Project 1</p>\r\n                                    </div>\r\n                                </div>\r\n                            </button>\r\n                            <button\r\n                                className=\"flex my-5 ml-8 hoverbg text-xl rounded border border-gray-500 cursor-pointer font-semibold focus:outline-none\">\r\n                                <p className=\"py-1 px-5\">Create Project</p>\r\n                            </button>\r\n                        </div>\r\n                        <a href=\"/tushar\">\r\n                            <span className=\"text-3xl p-5 float-right \">\r\n                                <i className=\"fas fa-th cursor-pointer\" aria-hidden=\"true\"/>\r\n                            </span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainNav;\r\n","import React, {Component} from 'react';\r\n\r\nclass Sprint extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.colapseref = React.createRef();\r\n    }\r\n\r\n    toggleList = () => {\r\n        const wrap = this.colapseref.current;\r\n        wrap.classList.toggle('collapsed');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"border mb-4 border-gray-500\">\r\n                <div className=\"p-2 w-full flex text-left flex-wrap hoverbg\">\r\n                    <div className=\"w-11/12 p-2\">\r\n                        <h1 className=\"font-sans font-semibold text-blue-800 text-xl\">\r\n                            Sprint 1\r\n                        </h1>\r\n                        <div className=\"flex text-blue-700\">\r\n                            <div className=\"p-1\">\r\n                                <p className=\"font-medium text-sm\">\r\n                                    <i className=\"fa fa-user pr-1\" aria-hidden=\"true\"/> 2\r\n                                    Peoples\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"p-1\">\r\n                                <p className=\"font-medium text-sm\">\r\n                                    <i className=\"fa fa-comments pr-1\" aria-hidden=\"true\"/> 45\r\n                                    Comments\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-1/12 text-xl text-blue-800\">\r\n                        <button className=\"float-right p-2 focus:outline-none\">\r\n                            <i\r\n                                className=\"fa fa-chevron-down\" onClick={this.toggleList}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapsible-wrapper collapsed\" ref={this.colapseref}>\r\n                    <ul className=\"pl-4 pr-2 py-2 border-t border-gray-500 w-full collapsible\">\r\n                        <li className=\"border-l-2 py-1 border-gray-500 w-full\">\r\n                            <div className=\"bg-white w-auto m-2 sm:pl-5 rounded hoverbg\">\r\n                                <div className=\"flex\">\r\n                                    <div className=\"p-2\">\r\n                                        <div className=\"flex\">\r\n                                            <div className=\"pl-1\">\r\n                                                <p\r\n                                                    className=\"bg-pink-500 text-gray-100 text-xs shadow rounded-full px-4\"\r\n                                                >\r\n                                                    High\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"text-blue-800 text-left lg:text-lg md:text-base\"\r\n                                        >\r\n                                            <p className=\"font-medium py-2\">\r\n                                                Prepare Structural Documentation\r\n                                            </p>\r\n                                            <div className=\"flex pr-4\">\r\n                                                <div className=\"pl-1\">\r\n                                                    <p\r\n                                                        className=\"bg-gray-300 text-blue-800 font-medium text-xs shadow-sm rounded-full px-2\"\r\n                                                    >\r\n                                                        Archetect\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div className=\"pl-1\">\r\n                                                    <p\r\n                                                        className=\"bg-gray-300 text-blue-800 font-medium text-xs shadow-sm rounded-full px-2\"\r\n                                                    >\r\n                                                        Developement\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex\">\r\n                                                <div className=\"p-1 float-left\">\r\n                                                    <p className=\"text-blue-700 font-medium text-sm\">\r\n                                                        <i className=\"fa fa-user pr-1\" aria-hidden=\"true\"/>\r\n                                                        Peoples\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div className=\"p-1 float-right\">\r\n                                                    <p className=\"text-blue-700 font-medium text-sm\">\r\n                                                        <i\r\n                                                            className=\"fa fa-comments pr-1\"\r\n                                                            aria-hidden=\"true\"\r\n                                                        />\r\n                                                        Comments\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <div\r\n                            className=\"text-center h-10 hoverbg text-gray-700 py-1 cursor-pointer\"\r\n                        >\r\n                            <i className=\"fa fa-plus p-2\"/>\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sprint;\r\n","import React, {Component} from 'react';\r\nimport Sprint from \"./Sprint\";\r\n\r\nclass BackLogs extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"w-full lg:ml-56 mt-20 bg-white\">\r\n                <div className=\"text-left text-4xl font-semibold text-gray-800 pt-5 pl-10\">\r\n                    Backlogs\r\n                </div>\r\n                <div className=\"w-full h-56 px-10 py-5\">\r\n                    <Sprint/>\r\n                    <Sprint/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BackLogs;\r\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Sidebar from \"./Component/Navigation/Sidebar\";\nimport Dashboard from \"./Component/Dashboard/Dashboard\";\nimport Board from \"./Component/Board/Board\";\nimport GanntChart from \"./Component/GanntChart/GanntChart\";\nimport './App.css'\nimport Login from \"./Login\";\nimport MainNav from \"./Component/Navigation/MainNav\";\nimport BackLogs from \"./Component/backlogs/BackLogs\";\nimport AuthUtil from \"./Client/AuthUtil\";\n\nclass App extends Component {\n    state = {\n        auth: false\n    }\n\n    componentDidMount() {\n        AuthUtil.checkToken().then(data => this.setState({auth: data}));\n    }\n\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\n        console.log(this.state.auth);\n    }\n\n    updateauth = (data) => {\n        this.setState({auth: data});\n    }\n    loginauthentication = () => {\n        if (this.state.auth) {\n            return (<div className=\"flex min-h-screen bg-gray-100\">\n                <Router>\n                    <MainNav/>\n                    <Sidebar/>\n                    <Route path=\"/project/\" exact component={Dashboard}/>\n                    <Route path=\"/project/board\" component={Board}/>\n                    <Route path=\"/project/gannt\" component={GanntChart}/>\n                    <Route path=\"/project/backlogs\" component={BackLogs}/>\n                </Router>\n            </div>)\n        } else {\n            return <Login updateauth={this.updateauth}/>\n        }\n    }\n\n    render() {\n        return (\n            this.loginauthentication()\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}